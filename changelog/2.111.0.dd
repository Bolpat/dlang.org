Ddoc

$(CHANGELOG_NAV_INJECT)

$(VERSION Apr 01, 2025, =================================================,

$(CHANGELOG_HEADER_STATISTICS
$(VER) comes with 41 major changes and 129 fixed Bugzilla issues.
        A huge thanks goes to the
        $(LINK2 #contributors, 80 contributors)
        who made $(VER) possible.)

$(BUGSTITLE_TEXT_HEADER Compiler changes,

$(LI $(RELATIVE_LINK2 dmd.auto-ref-local,Storage classes `ref` and `auto ref` can now be applied to local, static, extern, and global variables))
$(LI $(RELATIVE_LINK2 dmd.auto-ref-put-adjacent,Keywords `auto` and `ref` must be adjacent))
$(LI $(RELATIVE_LINK2 dmd.default-align,The `align` attribute now allows specifying `default` explicitly))
$(LI $(RELATIVE_LINK2 dmd.delete-keyword,Remove `delete` as a keyword))
$(LI $(RELATIVE_LINK2 dmd.deprecation-case,Case fallthough for multivalued cases is an error now))
$(LI $(RELATIVE_LINK2 dmd.deprecation-dtor-fields,An error is now given for constructors when a field's destructor has stricter attributes))
$(LI $(RELATIVE_LINK2 dmd.deprecation-noop-assignment,Initializing a field with itself has been deprecated))
$(LI $(RELATIVE_LINK2 dmd.deprecation-pointer-subtract,An error is now given for subtracting pointers of different types))
$(LI $(RELATIVE_LINK2 dmd.deprecation-throwing-contracts,An error is now issued for `in`/`out` contracts of `nothrow` functions that may throw))
$(LI $(RELATIVE_LINK2 dmd.deprecation-typesafe-variadic-class,Typesafe variadic class parameters have been deprecated))
$(LI $(RELATIVE_LINK2 dmd.deprecation-version-debug-number,Integers in `debug` or `version` statements have been removed from the language))
$(LI $(RELATIVE_LINK2 dmd.error-messages,Many error messages have changed))
$(LI $(RELATIVE_LINK2 dmd.extern-std-cpp23,The compiler now accepts `-extern-std=c++23`))
$(LI $(RELATIVE_LINK2 dmd.ftime-trace,Build time profiling has been added to DMD))
$(LI $(RELATIVE_LINK2 dmd.getBitfieldInfo,New traits `getBitfieldOffset` and `getBitfieldWidth` for built-in bitfields))
$(LI $(RELATIVE_LINK2 dmd.import-c-i,Using the compiler flag `-i` will now properly pick up C source files))
$(LI $(RELATIVE_LINK2 dmd.importc-pragma-stc,A pragma for ImportC allows to set `nothrow`, `@nogc` or `pure`))
$(LI $(RELATIVE_LINK2 dmd.mixin-assign,Mixin templates can now use assignment syntax))
$(LI $(RELATIVE_LINK2 dmd.obj_extensions,Object file extensions `.o` and `.obj` are now accepted on all platforms))
$(LI $(RELATIVE_LINK2 dmd.objc-improvements,Objective-C selectors are now automatically generated when not specified with `@selector`.))
$(LI $(RELATIVE_LINK2 dmd.oq-compiler-switch,New compiler switch `-oq` for DMD))
$(LI $(RELATIVE_LINK2 dmd.placementNew,Added Placement New Expression))
$(LI $(RELATIVE_LINK2 dmd.postfix-this-attributes,Postfix type qualifier method attributes for `-H` and `-D`))
$(LI $(RELATIVE_LINK2 dmd.remove-samples,The folder *samples* has been removed from DMD installations))
$(LI $(RELATIVE_LINK2 dmd.rvalue,New keyword `__rvalue`))
$(LI $(RELATIVE_LINK2 dmd.safer,Add `-preview=safer` switch for safety checking on unattributed functions))
$(LI $(RELATIVE_LINK2 dmd.shortened-method-constructor,Shortened method syntax can now be used in constructors))

)

$(BUGSTITLE_TEXT_HEADER Runtime changes,

$(LI $(RELATIVE_LINK2 druntime.bcrypt,Add Windows BCrypt bindings under `core.sys.windows.bcrypt`))
$(LI $(RELATIVE_LINK2 druntime.criticalRegionLock,Remove `criticalRegionLock`))
$(LI $(RELATIVE_LINK2 druntime.expect-trap,Adds `expect`, `likely`, `unlikely`, and `trap` to `core.builtins`))
$(LI $(RELATIVE_LINK2 druntime.segfault-message,New segfault handler showing backtraces for null access / call stack overflow on linux))

)

$(BUGSTITLE_TEXT_HEADER Library changes,

$(LI $(RELATIVE_LINK2 bit-cast,Added `std.conv.bitCast`))
$(LI $(RELATIVE_LINK2 formatted_read_tuple_return,Extend the functionality of formattedRead to permit a std.file.slurp like execution.))
$(LI $(RELATIVE_LINK2 fromhexstring,Added fromHexString and fromHexStringAsRange functions to std.digest.))
$(LI $(RELATIVE_LINK2 odbc-4,ODBC Bindings in `etc.c.odbc` have been updated to ODBC 4.0.))
$(LI $(RELATIVE_LINK2 pop-grapheme,Added popGrapheme function to std.uni.))
$(LI $(RELATIVE_LINK2 readfln,Added `readfln` and `File.readfln` to `std.stdio`))
$(LI $(RELATIVE_LINK2 shared-allocator-list,Added the `SharedAllocatorList`, as the thread-safe version of the regular `AllocatorList`.))
$(LI $(RELATIVE_LINK2 sumtype_procedural_api,New procedural API for `std.sumtype`))
$(LI $(RELATIVE_LINK2 unicode-16,std.uni has been upgraded from Unicode 15.1.0 to 16.0.0))

)

$(BUGSTITLE_TEXT_HEADER Dub changes,

$(LI $(RELATIVE_LINK2 fix-cimport-paths,Fix issue where cImportPaths wasn't working with dmd and ldc))

)

$(CHANGELOG_SEP_HEADER_TEXT_NONEMPTY)

$(CHANGELOG_SEP_HEADER_TEXT)

$(CHANGELOG_SEP_TEXT_BUGZILLA)

$(BUGSTITLE_BUGZILLA DMD Compiler regression fixes,

$(LI $(BUGZILLA 10713): [REG2.063] ICE with typeof$(LPAREN)this.nonExistingField$(RPAREN) in method signature)
$(LI $(BUGZILLA 20562): [dmd] Memory allocation failed $(LPAREN)ERROR: This is a compiler bug$(RPAREN))
$(LI $(BUGZILLA 20686): failed static assert using a combination of __traits and unfinished type)
$(LI $(BUGZILLA 20730): [REG 2.091] __traits$(LPAREN)compiles$(RPAREN) fails if any ungagged errors occurred in compilation)
)
$(BUGSTITLE_BUGZILLA DMD Compiler bug fixes,

$(LI $(BUGZILLA 4101): [tdpl] DMD doesn't give error when goto skips initialization)
$(LI $(BUGZILLA 4174): Template interface functions not allowed, making operator overloads difficult)
$(LI $(BUGZILLA 9662): Implement RDMD test suite)
$(LI $(BUGZILLA 10257): .tupleof loses protection information upon iteration)
$(LI $(BUGZILLA 10370): ICE on invalid imports when module is used as package)
$(LI $(BUGZILLA 10386): Package import feature breaks with static libraries)
$(LI $(BUGZILLA 10574): "auto ref" fails to match when IFTI succeeds $(LPAREN)strip to level const$(RPAREN))
$(LI $(BUGZILLA 10587): __traits$(LPAREN)getAttributes$(RPAREN) doesn't work on incomplete templated types)
$(LI $(BUGZILLA 10603): Refused pure attribute on the left for function pointer argument)
$(LI $(BUGZILLA 10639): Win64: wrong optimizer codegen with struct literal with complex fields)
$(LI $(BUGZILLA 10699): override inconsistently allowed for abstract functions)
$(LI $(BUGZILLA 16643): CTFE internal error with null)
$(LI $(BUGZILLA 17503): is-expression pattern in static if matches too many types)
$(LI $(BUGZILLA 20587): _rt_loadLibrary symbol not found)
$(LI $(BUGZILLA 20603): 'cannot use non-constant CTFE pointer in an initializer' in recursive structure with overlap)
$(LI $(BUGZILLA 20610): const in a .tupleof loop is ignored)
$(LI $(BUGZILLA 20621): Since DMD 2.087.0: 32 Bit Linux now uses XMM registers: SIGILL, Illegal instruction on intel Pentium III)
$(LI $(BUGZILLA 20688): Wrong code when linking to C complex number functions)
$(LI $(BUGZILLA 20691): Converting scope static array to scope dynamic array should be error)
$(LI $(BUGZILLA 20812): _d_assocarrayliteralTX segfault assigning a shared associative array an AA literal)
$(LI $(BUGZILLA 20831): __traits$(LPAREN)getAttributes$(RPAREN) failes to compile when used on a parameter with no name)
$(LI $(BUGZILLA 20912): Compiler incorrectly lists non-matching overloads as matching in diagnostic)
$(LI $(BUGZILLA 21020): named import in with block masks local symbol)
$(LI $(BUGZILLA 21995): Struct with size uint.max or greater causes ICE)
$(LI $(BUGZILLA 23131): With -vasm all the X87 instructions are printed wrong.)
$(LI $(BUGZILLA 23294): [dip1000] parameter to parameter assignment leads to incorrect scope inference)
$(LI $(BUGZILLA 23830): Azure failure for OMF: Module name not printed before struct symbol)
$(LI $(BUGZILLA 23841): isZeroInit does not take into account unions)
$(LI $(BUGZILLA 24153): Inliner breaks -betterC by requiring TypeInfo)
$(LI $(BUGZILLA 24375): ImportC: .di generator outputs C expression with `->` operator)
$(LI $(BUGZILLA 24447): ImportC: extern symbols cannot have initializers)
$(LI $(BUGZILLA 24651): Bitfield layout wrong for 48-bit field on 32-bit Linux)
$(LI $(BUGZILLA 24663): dip1000 doesn't check slice expression implicitly converted to static array)
$(LI $(BUGZILLA 24669): ImportC: C files are not compiled with '-i' flag)
$(LI $(BUGZILLA 24670): importC: .di generation does not place parentheses around const struct return types)
$(LI $(BUGZILLA 24694): [DIP1000] can escape stack pointer through struct.class.field)
$(LI $(BUGZILLA 24701): No error produced from casted noreturn variable)
$(LI $(BUGZILLA 24705): Arguments of synchronized method are unintentionally treated as shared with -preview=nosharedaccess)
$(LI $(BUGZILLA 24706): Missing errors for first operand of comma expression)
$(LI $(BUGZILLA 24707): error message has bad parameter attribute order)
$(LI $(BUGZILLA 24733): ImportC: `#pragma pack$(LPAREN)pop$(RPAREN)` restores wrong alignment)
$(LI $(BUGZILLA 24748): DMD can't output object files with fully qualified name, making -od overwirte each other file)
$(LI $(BUGZILLA 24762):  @nogc false positive error)
$(LI $(BUGZILLA 24776): Struct with anonymous union has wrong isZeroInit)
$(LI $(BUGZILLA 24803): __traits$(LPAREN)location$(RPAREN) is inconsistent with modules)
$(LI $(BUGZILLA 24807): Error message missing parens for template instance)
$(LI $(BUGZILLA 24819): Optimizer changes result of float calculations on 32-bit)
$(LI $(BUGZILLA 24822): When passing a non-POD argument to an rvalue parameter, an unnecessary blit is done)
$(LI $(BUGZILLA 24830): separate compilation + circular deps + templated opCmp = missing symbols)
$(LI $(BUGZILLA 24836): struct return by hidden struct arg does not need copy to become an rvalue)
$(LI $(BUGZILLA 24845): Compiler error when trying to assign to an AA value of an enum instance)
$(LI $(BUGZILLA 24848): bad parser diagnostic for a partial MulExp)
$(LI $(BUGZILLA 24855): VRP fails to prevent overflow after division)
$(LI $(BUGZILLA 24861): Vestige of 16 bit code being accidentally generated)
$(LI $(BUGZILLA 24871): DDoc strips indent in triple slash comments)
$(LI $(BUGZILLA 24883): Speculative template overload error escapes with `-preview=rvaluerefparam`)
$(LI $(BUGZILLA 24891): Two scope attributes emitted as part of .di generation)
)
$(BUGSTITLE_BUGZILLA DMD Compiler enhancements,

$(LI $(BUGZILLA 9811): Add static code analyzing $(LPAREN)i.e. PVS-Studio-like diagnostic$(RPAREN))
$(LI $(BUGZILLA 9997): Missed misspell suggestions for UFCS)
$(LI $(BUGZILLA 10023): Add rtInfo $(LPAREN)or equivalent$(RPAREN) to ModuleInfo)
$(LI $(BUGZILLA 18235): Group logically similar tests into the same module in the D2 testsuite)
$(LI $(BUGZILLA 20516): [D 2.0 FAQ])
$(LI $(BUGZILLA 20614): CTFE supports typeid$(LPAREN)stuff$(RPAREN).name but not classinfo.name)
$(LI $(BUGZILLA 20888): std.range.Cycle does not compose with `const`)
$(LI $(BUGZILLA 20960):  -profile=gc does not track class objects allocated with new)
$(LI $(BUGZILLA 20982): Add a pragma to suppress deprecation messages)
$(LI $(BUGZILLA 21564): Allow assignment syntax for instantiating mixin templates)
$(LI $(BUGZILLA 23449): spellchecker should suggest corrections for pointer members)
$(LI $(BUGZILLA 23812): ImportC: allow adding function attributes to imported C functions)
$(LI $(BUGZILLA 24639): ImportC: defines of negative constants not detected for enum conversion)
$(LI $(BUGZILLA 24645): Hidden static assert error messages if more than 20 errors)
$(LI $(BUGZILLA 24738): Import core.interpolation suggestion)
$(LI $(BUGZILLA 24745): Better error message when creating an associative array with the wrong syntax)
$(LI $(BUGZILLA 24749): A clause consisting only of "throw" should be the unlikely path)
)
$(BUGSTITLE_BUGZILLA Phobos bug fixes,

$(LI $(BUGZILLA 64): Unhandled errors should go to stderr)
$(LI $(BUGZILLA 10581): Undefined identifier "std.uni.isWhite" when passing string lambda to std.algorithm.filter)
$(LI $(BUGZILLA 10607): DirEntry has no constructor)
$(LI $(BUGZILLA 10647): AutoImplement should implement overridden member functions with 'override' attributes)
$(LI $(BUGZILLA 10680): BigInt uses deprecated std.traits.unsigned)
$(LI $(BUGZILLA 14138): std.parallelism.task breaks @safety)
$(LI $(BUGZILLA 15315): can break immutable with std.algorithm.move)
$(LI $(BUGZILLA 20870): std.outbuffer.printf is trusted)
$(LI $(BUGZILLA 20872): std.array.assocArray trusts user-provided 'front' for values)
$(LI $(BUGZILLA 20929): std.experimental.allocator.expandArray's range-based overload fails to instantiate for char and wchar arrays.)
$(LI $(BUGZILLA 23300): std.array : array wrongly propagates scopeness of source)
$(LI $(BUGZILLA 24667): goo.gl is going away)
$(LI $(BUGZILLA 24685): std.stdio.File.rawRead allows reading raw pointers from files in @safe code)
$(LI $(BUGZILLA 24704): The error message for DateTime.fromISOExtString says that valid ISO extended strings that it does not support are invalid ISO extended strings)
$(LI $(BUGZILLA 24715): std/process: Default to libc `closefrom` in spawnProcessPosix)
$(LI $(BUGZILLA 24773): Stable sort$(LPAREN)$(RPAREN) invokes the destructor on uninitialized elements)
$(LI $(BUGZILLA 24801): `RefRange` doesn’t work if range primitives are not `const`)
$(LI $(BUGZILLA 24809): In some cases, stable sort assigns to unininitialized elements)
$(LI $(BUGZILLA 24818): Tag of a single-type SumType wastes space)
)
$(BUGSTITLE_BUGZILLA Phobos enhancements,

$(LI $(BUGZILLA 10538): std.typecons.wrap should consider opDispatch)
$(LI $(BUGZILLA 17214): std.array.Appender has an unnecessary indirection)
$(LI $(BUGZILLA 17479): Public constructor for std.process.Pid)
$(LI $(BUGZILLA 20330): json toString with outputrange)
$(LI $(BUGZILLA 20889): Support construction of std.bigint.BigInt from a sign and a byte-array magnitude)
$(LI $(BUGZILLA 21045): std.getopt: Support blank as separator of multiple values)
$(LI $(BUGZILLA 22293): Nullable should define opCast!bool)
$(LI $(BUGZILLA 24524): Very slow process fork if RLIMIT_NOFILE is too high)
$(LI $(BUGZILLA 24698): Appender needs to expose readonly property 'size_t length' without using 'data' property)
$(LI $(BUGZILLA 24823): std.json: Allow optionally preserving the order of fields in JSON objects)
$(LI $(BUGZILLA 24851): Some members of CustomFloat can have const this)
$(LI $(BUGZILLA 24875): std.traits.isAggregateType does not consider enums of aggregate types to be aggregate types)
)
$(BUGSTITLE_BUGZILLA Druntime bug fixes,

$(LI $(BUGZILLA 10380): [AA] Wrong code using associative array as key type in associative array)
$(LI $(BUGZILLA 20763): checkaction=context does not format pointers)
$(LI $(BUGZILLA 24660): atomic_wchar_t has wrong size on Posix)
$(LI $(BUGZILLA 24661): wctype_t and wctrans_t are platform-dependent)
$(LI $(BUGZILLA 24835): hasElaborateAssign is true for structs where opAssign is disabled if a member variable has elaborate assignment)
$(LI $(BUGZILLA 24864): hasElaborateDestructor incorrectly true for structs with anonymous unions)
)
$(BUGSTITLE_BUGZILLA Druntime enhancements,

$(LI $(BUGZILLA 17416): SocketOption.REUSEPORT not available on linux)
$(LI $(BUGZILLA 19369): core.sys.posix.setjmp lacks support for Darwin)
$(LI $(BUGZILLA 20567): GC should not start threads for parallel marking in simple programs)
)
$(BUGSTITLE_BUGZILLA dlang.org bug fixes,

$(LI $(BUGZILLA 10565): Level-5 titles are missing in Language reference)
$(LI $(BUGZILLA 10605): Lambda grammar is not sufficient)
$(LI $(BUGZILLA 14945): unions are missing from the ABI page)
$(LI $(BUGZILLA 20601): [Oh No! Page Not Found])
$(LI $(BUGZILLA 24680): [dip1000] final auto class method infers scope but no return)
$(LI $(BUGZILLA 24732): FAQ article is out of date on calling printf)
)
$(BUGSTITLE_BUGZILLA dlang.org enhancements,

$(LI $(BUGZILLA 19348): Struct casts should be better documented.)
$(LI $(BUGZILLA 24659): Memory safe D page lacks information on return ref)
$(LI $(BUGZILLA 24868): Undocumented cast from struct to static array)
$(LI $(BUGZILLA 24876): Undocumented cast from slice to static array)
$(LI $(BUGZILLA 24890): spec/arrays.dd should mention comparison and warn about dangling .ptr)
)
$(BUGSTITLE_GITHUB DMD Compiler bug fixes,

$(LI $(DMDGITHUB 17214): Missing O_NOFOLLOW enum on macOS)
$(LI $(DMDGITHUB 17479): Incorrect definition of GetMessageExtraInfo)
$(LI $(DMDGITHUB 17503): Associative Arrays improperly register a GC-allocated TypeInfo for element cleanup)
$(LI $(DMDGITHUB 18235): Add offending member to "no size because of forward reference" error)
$(LI $(DMDGITHUB 19369): getcwd is deprecated for Windows - the ISO C++ conformant _getcwd should be used instead)
$(LI $(DMDGITHUB 20330): subtracting pointers with different types is both deprecated and an error)
$(LI $(DMDGITHUB 20516): ImportC: undefined identifier `_Float16`)
$(LI $(DMDGITHUB 20562): returning __rvalue should move-construct the NRVO value)
$(LI $(DMDGITHUB 20567): returning the result of a constructor should be NRVO)
$(LI $(DMDGITHUB 20587): Add `align$(LPAREN)default$(RPAREN)`)
$(LI $(DMDGITHUB 20601): hasIndirections does not handle static arrays of length 0 correctly)
$(LI $(DMDGITHUB 20603): hasIndirections does not handle enums correctly)
$(LI $(DMDGITHUB 20610): aliasing for fields does not work)
$(LI $(DMDGITHUB 20614): Add __traits$(LPAREN)hasMoveConstructor, type$(RPAREN))
$(LI $(DMDGITHUB 20621): Comparing addresses of rvalue reference parameters not correct)
$(LI $(DMDGITHUB 20686): Generated constructors should infer @nogc, nothrow and infer attributes)
$(LI $(DMDGITHUB 20688): SO_REUSEPORT is not defined for some linux targets)
$(LI $(DMDGITHUB 20691): SO_REUSEPORT is not defined for Solaris)
$(LI $(DMDGITHUB 20730): runnable/test23514.d test reports different AST between 32bit and 64bit)
$(LI $(DMDGITHUB 20763): Inconsistent handling of type + value in typeof expressions)
$(LI $(DMDGITHUB 20812): hasIndirections doesn't take qualifiers into account with void)
$(LI $(DMDGITHUB 20831): Mangle conflict after ImportC statement expression gets expanded from macro)
$(LI $(DMDGITHUB 20888): Compiler spits out implicit conversion technobabble when a return statement doesn't match the return type of a function)
$(LI $(DMDGITHUB 20889): ImportC: Usage of `typedef` types decays to original type.)
$(LI $(DMDGITHUB 20912): ImportC: DI Generator stops emitting enums before all #defines are emitted.)
$(LI $(DMDGITHUB 20929): #line directives mess up -verrors=context)
$(LI $(DMDGITHUB 20960): i = i && 1; fails at runtime)
$(LI $(DMDGITHUB 20982): Regression #20777: wrong line numbers diagnosed in inline asm)
$(LI $(DMDGITHUB 21020): [REG2.111] Indexing a *cast* AA yields no lvalue anymore)
$(LI $(DMDGITHUB 21024): Optimize x^^0, x^^1 and x^^2 expressions)
$(LI $(DMDGITHUB 21045): import __stdin causes compilation to pause while reading from stdin)
)
$(BUGSTITLE_GITHUB Phobos bug fixes,

$(LI $(PHOBOSGITHUB 9662): std.getopt: improve error message for malformed arguments)
$(LI $(PHOBOSGITHUB 9811): Writelning a tuple ignores member's toString.)
$(LI $(PHOBOSGITHUB 10023): Add "eval" to phobos)
$(LI $(PHOBOSGITHUB 10257): variadic overload of std.algorithm.searching.countUntil should return which needle was found)
$(LI $(PHOBOSGITHUB 10370): Add readfln to std.stdio)
$(LI $(PHOBOSGITHUB 10380): Memoize should handle lambdas)
$(LI $(PHOBOSGITHUB 10386): Make std.math.isIdentical work in CTFE)
$(LI $(PHOBOSGITHUB 10538): Cannot swap a std.typecons.Tuple)
$(LI $(PHOBOSGITHUB 10565): BigInt multiplication of 0 by integral $(LPAREN)non-BigInt$(RPAREN) type creates "-0" $(LPAREN)negative zero$(RPAREN))
$(LI $(PHOBOSGITHUB 10574): std.process execve depends on environ pointer not changing)
$(LI $(PHOBOSGITHUB 10581): std.logger has an ostensibly broken example and wrong docs)
$(LI $(PHOBOSGITHUB 10587): std.process.kill should fail for a terminated pid)
$(LI $(PHOBOSGITHUB 10603): `toDelegate` accepts but can’t handle a templated `opCall`)
$(LI $(PHOBOSGITHUB 10605): byLine and byLineCopy should be safe)
$(LI $(PHOBOSGITHUB 10607): Structs `lines` and `ByLineCopy` cannot be usefully constructed in `@safe` code)
$(LI $(PHOBOSGITHUB 10639): Memory corruption when calling std.process exec functions)
$(LI $(PHOBOSGITHUB 10647): sumtype: canMatch fails with handler that returns non-copyable type by ref)
$(LI $(PHOBOSGITHUB 10680): [REG2.111] std.getopt doesn't accept `const$(LPAREN)string$(RPAREN)[]` anymore)
$(LI $(PHOBOSGITHUB 10713): std.format string positions affect all further format specifiers)
)
$(BUGSTITLE_GITHUB dlang.org bug fixes,

$(LI $(DLANGORGGITHUB 4101): grammar allows missing function body for AutoFuncDeclaration)
$(LI $(DLANGORGGITHUB 4174): Invalid C enum in ImportC spec example)
)
)
$(D_CONTRIBUTORS_HEADER 80)
$(D_CONTRIBUTORS
    $(D_CONTRIBUTOR 0-v-0)
    $(D_CONTRIBUTOR 0v0)
    $(D_CONTRIBUTOR Adam Wilson)
    $(D_CONTRIBUTOR Alexander Heistermann)
    $(D_CONTRIBUTOR Amaury)
    $(D_CONTRIBUTOR Anca Maxim)
    $(D_CONTRIBUTOR Andrei Horodniceanu)
    $(D_CONTRIBUTOR Andrei Rusanescu)
    $(D_CONTRIBUTOR Andrey Penechko)
    $(D_CONTRIBUTOR Anita Hammer)
    $(D_CONTRIBUTOR Artha)
    $(D_CONTRIBUTOR Ate Eskola)
    $(D_CONTRIBUTOR bangbangsheshotmedown)
    $(D_CONTRIBUTOR Chibisi Chima-Okereke)
    $(D_CONTRIBUTOR Cyrodwd)
    $(D_CONTRIBUTOR Dawson Frakes)
    $(D_CONTRIBUTOR Denis Feklushkin)
    $(D_CONTRIBUTOR Dennis)
    $(D_CONTRIBUTOR Dennis Korpel)
    $(D_CONTRIBUTOR Dennis O.)
    $(D_CONTRIBUTOR dhawal543)
    $(D_CONTRIBUTOR Elias Batek)
    $(D_CONTRIBUTOR Emmanuel Ferdman)
    $(D_CONTRIBUTOR Fares A. Bakhit)
    $(D_CONTRIBUTOR Feldwor)
    $(D_CONTRIBUTOR Georgy Markov)
    $(D_CONTRIBUTOR Iain Buclaw)
    $(D_CONTRIBUTOR Iain Sandoe)
    $(D_CONTRIBUTOR IchorDev)
    $(D_CONTRIBUTOR Ilya Yanok)
    $(D_CONTRIBUTOR Inkrementator)
    $(D_CONTRIBUTOR Jan Jurzitza)
    $(D_CONTRIBUTOR Jeremy Baxter)
    $(D_CONTRIBUTOR Johan Engelen)
    $(D_CONTRIBUTOR John Colvin)
    $(D_CONTRIBUTOR John Dougan)
    $(D_CONTRIBUTOR Jonas Meeuws)
    $(D_CONTRIBUTOR Jonathan M Davis)
    $(D_CONTRIBUTOR jordan4ibanez)
    $(D_CONTRIBUTOR João Lourenço)
    $(D_CONTRIBUTOR Kymorphia, PBC)
    $(D_CONTRIBUTOR liushuyu)
    $(D_CONTRIBUTOR LunaTheFoxgirl)
    $(D_CONTRIBUTOR Luís Ferreira)
    $(D_CONTRIBUTOR Manu Evans)
    $(D_CONTRIBUTOR Marcelo Silva Nascimento Mancini)
    $(D_CONTRIBUTOR Martin Kinkelin)
    $(D_CONTRIBUTOR Mathias Lang)
    $(D_CONTRIBUTOR Matthew Qiu)
    $(D_CONTRIBUTOR Max Haughton)
    $(D_CONTRIBUTOR Mike)
    $(D_CONTRIBUTOR Nicholas Wilson)
    $(D_CONTRIBUTOR Nick Treleaven)
    $(D_CONTRIBUTOR Nicolò Monaldini)
    $(D_CONTRIBUTOR Oshlok)
    $(D_CONTRIBUTOR Paul Backus)
    $(D_CONTRIBUTOR Per Nordlöw)
    $(D_CONTRIBUTOR Quirin F. Schroll)
    $(D_CONTRIBUTOR Quirin Schroll)
    $(D_CONTRIBUTOR Rainer Schuetze)
    $(D_CONTRIBUTOR Razvan Nitu)
    $(D_CONTRIBUTOR Richard (Rikki) Andrew Cattermole)
    $(D_CONTRIBUTOR Robert burner Schadek)
    $(D_CONTRIBUTOR Royal Simpson Pinto)
    $(D_CONTRIBUTOR royalpinto007)
    $(D_CONTRIBUTOR Runa)
    $(D_CONTRIBUTOR ryuukk)
    $(D_CONTRIBUTOR Sebastian Wilzbach)
    $(D_CONTRIBUTOR Serg Gini)
    $(D_CONTRIBUTOR Simen Kjærås)
    $(D_CONTRIBUTOR Steven Schveighoffer)
    $(D_CONTRIBUTOR Sönke Ludwig)
    $(D_CONTRIBUTOR Teodor Dutu)
    $(D_CONTRIBUTOR Tim Schendekehl)
    $(D_CONTRIBUTOR tynuk)
    $(D_CONTRIBUTOR Vladimir Panteleev)
    $(D_CONTRIBUTOR Vladiwostok)
    $(D_CONTRIBUTOR Walter Bright)
    $(D_CONTRIBUTOR wolframw)
    $(D_CONTRIBUTOR Xin Wang)
)
$(D_CONTRIBUTORS_FOOTER)
$(CHANGELOG_NAV_INJECT)

Macros:
    VER=2.111.0
    TITLE=Change Log: $(VER)
